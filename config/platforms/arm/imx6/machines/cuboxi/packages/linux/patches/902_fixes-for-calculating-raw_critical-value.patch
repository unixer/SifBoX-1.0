From de3725198e33b9d580279f02cf40188fbe43ea67 Mon Sep 17 00:00:00 2001
From: Rabeeh Khoury <rabeeh@solid-run.com>
Date: Wed, 19 Feb 2014 23:15:11 +0200
Subject: [PATCH] Fixes for calculating raw_critical value

Signed-off-by: Rabeeh Khoury <rabeeh@solid-run.com>
---
 drivers/mxc/thermal/thermal.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/mxc/thermal/thermal.c b/drivers/mxc/thermal/thermal.c
index a39b7f8..4f3b602 100644
--- a/drivers/mxc/thermal/thermal.c
+++ b/drivers/mxc/thermal/thermal.c
@@ -496,7 +496,7 @@ static int anatop_thermal_set_trip_temp(struct thermal_zone_device *thermal,
 		if (tz->trips.critical.flags.valid) {
 			tz->trips.critical.temperature = CEL_TO_KELVIN(
 				*temp, tz->kelvin_offset);
-			raw_critical = raw_25c - ratio * (*temp - 25) / 100;
+			raw_critical = raw_25c - ratio * (*temp - 25000) / 100000;
 			anatop_update_alarm(raw_critical);
 		}
 		break;
@@ -909,7 +909,7 @@ static int anatop_thermal_counting_ratio(unsigned int fuse_data)
 	raw_n40c = raw_25c + (13 * ratio) / 20;
 	raw_125c = raw_25c - ratio;
 	/* Init default critical temp to set alarm */
-	raw_critical = raw_25c - ratio * (KELVIN_TO_CEL(TEMP_CRITICAL, MKELVIN_OFFSET) - 25) / 100000;
+	raw_critical = raw_25c - ratio * (KELVIN_TO_CEL(TEMP_CRITICAL, MKELVIN_OFFSET) - 25000) / 100000;
 	clk_enable(pll3_clk);
 
 	return ret;
-- 
1.8.5.5

