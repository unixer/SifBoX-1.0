--- a/xbmc/cores/dvdplayer/DVDCodecs/Video/DVDVideoCodecVMETA.cpp	2013-10-13 17:47:00.000000000 +0200
+++ b/xbmc/cores/dvdplayer/DVDCodecs/Video/DVDVideoCodecVMETA.cpp	2013-10-13 17:48:57.063419852 +0200
@@ -609,21 +609,24 @@
   }
 
   
-  double start = CDVDClock::GetAbsoluteClock();
-
-  for(;;)
+  if (pData)
   {
-    IppCodecStatus retCodec = DecodeInternal();
-
-    if (retCodec == IPP_STATUS_FRAME_COMPLETE || retCodec == IPP_STATUS_NEED_INPUT || retCodec == IPP_STATUS_ERR)
-      break;
+    double start = CDVDClock::GetAbsoluteClock();
 
-    // decoding timeout.
-    // TODO: should we store the decoding data and try it on the next decode again ?
-    if((CDVDClock::GetAbsoluteClock() - start) > (double)DVD_MSEC_TO_TIME(500))
+    for (;;)
     {
-      CLog::Log(LOGERROR, "%s::%s decoder timeout retCodec = %d", CLASSNAME, __func__, retCodec);
-      break;
+      IppCodecStatus retCodec = DecodeInternal();
+
+      if (retCodec == IPP_STATUS_FRAME_COMPLETE || retCodec == IPP_STATUS_NEED_INPUT || retCodec == IPP_STATUS_ERR)
+        break;
+
+      // decoding timeout.
+      // TODO: should we store the decoding data and try it on the next decode again ?
+      if ((CDVDClock::GetAbsoluteClock() - start) > (double)DVD_MSEC_TO_TIME(500))
+      {
+        CLog::Log(LOGERROR, "%s::%s decoder timeout retCodec = %d", CLASSNAME, __func__, retCodec);
+        break;
+      }
     }
   }
 
