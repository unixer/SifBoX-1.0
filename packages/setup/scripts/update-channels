#!/bin/sh

export TERM=linux
. gettext.sh
export TEXTDOMAIN=openpctv

if [ ! -d /dev/dvb/adapter0 ];then
  dialog --msgbox "$(gettext "No DVB devices has been discovered. Please check whether the device is ready.")" 7 60; exit
fi

if [ -d /video -a -f /video/diseqc.conf ]; then
  DISEQCCONF="/video/diseqc.conf"
  CHANNELS="/video/channels.conf"
elif [ -d /etc/vdr -a -f /etc/vdr/diseqc.conf ]; then
  DISEQCCONF="/etc/vdr/diseqc.conf"
  CHANNELS="/etc/vdr/channels.conf"
else
  exit
fi

[ -f $CHANNELS ] && cp $CHANNELS $CHANNELS.$(date +%Y%m%d%H%M%S)

DIALOGTMP=/tmp/dialogtmp.$$
RESULTTMP=/tmp/resulttmp.$$
CMDLINE=/tmp/cmdline.$$

getdiseqcline () {
echo "dialog --backtitle \"$(gettext "Scan channels for VDR")\" --title \"$(gettext "Select Satellite")\"  --checklist \"$(gettext "Please select the satellite you want to scan, noted that the scanning process may be quite long, please be patient.")\" 15 60 8 \\" > $DIALOGTMP
for i in $(cat $CMDLINE | awk '{print $4}'); do
  echo "$i \"\" on \\" >> $DIALOGTMP
done
echo "2> $RESULTTMP" >> $DIALOGTMP
. $DIALOGTMP
for i in $(sed 's/\"//g' $RESULTTMP); do
  echo ":$i" > ${CHANNELS}.$i
  cmd="sh -c 'source /etc/profile;$(grep $i $CMDLINE)'"
#  eval $(grep $i $CMDLINE)
  eval $cmd
done
}

cat $DISEQCCONF | while read line; do
  if echo "$line" | grep -q "^:"; then
    id=${line##:}
    num=`expr $id - 1`
  elif echo "$line" | grep -q "^#DVB-C"; then
    if dialog --yesno "$(gettext "We'll use w_scan to scan channels, are you ready?")" 7 60; then
      echo ":DVB-C" > ${CHANNELS}.DVB-C
      w_scan -a $num -f c -Q 0 -S 1 -o 21 >> ${CHANNELS}.DVB-C
    else
      exit
    fi
  elif echo "$line" | grep -q "^#DVB-T"; then
    if dialog --yesno "$(gettext "Please put the transponders list in /etc/dvbt for scan-s2, Are you ready?")" 7 60; then
      echo ":DVB-T" > ${CHANNELS}.DVB-T
      scan-s2 -a $num -A 1 -x -2 -o vdr -v -U /etc/dvbt >> ${CHANNELS}.DVB-T
    else
      exit
    fi
  elif echo "$line" | grep -q "^#codeline#"; then
    FULLVALUE=$(echo $line | sed 's/#codeline#//g')
    LO=`echo ${FULLVALUE} | cut -d\| -f1 | cut -d% -f1 | cut -d/ -f1 | cut -d: -f2`
    HI=`echo ${FULLVALUE} | cut -d\| -f1 | cut -d% -f1 | cut -d/ -f2 | cut -d: -f2`
    SAT=`echo ${FULLVALUE} | cut -d\| -f1 | cut -d% -f1 | cut -d/ -f2 | cut -d: -f1`
    SLOF=`echo ${FULLVALUE} | cut -d\| -f1 | cut -d% -f1 | cut -d/ -f3`
    DISEQC_1=`echo ${FULLVALUE} | cut -d\| -f1 | cut -d% -f2 | cut -d: -f1`
    DISEQC_2=`echo ${FULLVALUE} | cut -d\| -f1 | cut -d% -f2 | cut -d: -f2`
    if [ $(echo $DISEQC_1 | cut -d_ -f1) = 0 ]; then
      D_F1="-s $(expr $(echo $DISEQC_1 | cut -d_ -f2) - 1 )"
    elif [ $(echo $DISEQC_1 | cut -d_ -f1) = 1 ]; then
      D_F1="-S $(expr $(echo $DISEQC_1 | cut -d_ -f2) - 1 )"
    fi
    if [ -n "$DISEQC_2" ]; then
      if [ $(echo $DISEQC_2 | cut -d_ -f1) = 0 ]; then
        D_F2="-s $(expr $(echo $DISEQC_2 | cut -d_ -f2) - 1 )"
      elif [ $(echo $DISEQC_2 | cut -d_ -f1) = 1 ]; then
        D_F2="-S $(expr $(echo $DISEQC_2 | cut -d_ -f2) - 1 )"
      fi
    fi
    if [ "X$LO" = "X" ]; then LO=$HI; SLOF=$HI; fi
    echo "scan-s2 /usr/share/transponders/${SAT}.ini -O $SAT -a $num -l $LO,$HI,$SLOF $D_F1 $D_F2 -5 -x -2 -o vdr -v -U >> ${CHANNELS}.${SAT}" >> $CMDLINE
  fi
done

grep -q "^#codeline#" $DISEQCCONF && getdiseqcline

cat /dev/null > ${CHANNELS}.radio
cat /dev/null > ${CHANNELS}.tv
echo "$(gettext "Split channels in TV and Radio...")"
cat ${CHANNELS}.[DS]* | while read line; do
  echo $line | grep -i ^:S >> ${CHANNELS}.radio
  if test "$(echo $line | awk -F: '{print $6}')" = "0" || echo $line | grep -i radio > /dev/null; then
     echo $line >> ${CHANNELS}.radio
  else
     echo $line >> ${CHANNELS}.tv
  fi
done

cp ${CHANNELS}.tv ${CHANNELS}

for i in $RESULTTMP $RESULTTMP $CMDLINE; do
  [ -f $i ] && rm $i
done
