diff -Naur llvm-3.0.src-old/autoconf/configure.ac llvm-3.0.src-new/autoconf/configure.ac
--- llvm-3.0.src-old/autoconf/configure.ac	2011-10-15 19:52:56.000000000 -0700
+++ llvm-3.0.src-new/autoconf/configure.ac	2011-12-03 10:37:21.000000000 -0800
@@ -393,6 +393,10 @@
        AC_CHECK_PROG(BUILD_CXX, c++, c++, , , /usr/ucb/c++)
      fi
   fi
+  AC_SUBST(BUILD_CPPFLAGS)
+  AC_SUBST(BUILD_CFLAGS)
+  AC_SUBST(BUILD_CXXFLAGS)
+  AC_SUBST(BUILD_LDFLAGS)
 else
   AC_SUBST(LLVM_CROSS_COMPILING, [0])
 fi
diff -Naur llvm-3.0.src-old/autoconf/m4/build_exeext.m4 llvm-3.0.src-new/autoconf/m4/build_exeext.m4
--- llvm-3.0.src-old/autoconf/m4/build_exeext.m4	2008-09-26 10:27:58.000000000 -0700
+++ llvm-3.0.src-new/autoconf/m4/build_exeext.m4	2011-12-03 10:37:21.000000000 -0800
@@ -18,7 +18,7 @@
      fi
   fi
   test -z "$BUILD_CC" && AC_MSG_ERROR([no acceptable cc found in \$PATH])
-  ac_build_link='${BUILD_CC-cc} -o conftest $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS 1>&AS_MESSAGE_LOG_FD'
+  ac_build_link='${BUILD_CC-cc} -o conftest $BUILD_CFLAGS $BUILD_CPPFLAGS $BUILD_LDFLAGS conftest.$ac_ext $LIBS 1>&AS_MESSAGE_LOG_FD'
   rm -f conftest*
   echo 'int main () { return 0; }' > conftest.$ac_ext
   ac_cv_build_exeext=
diff -Naur llvm-3.0.src-old/Makefile.config.in llvm-3.0.src-new/Makefile.config.in
--- llvm-3.0.src-old/Makefile.config.in	2011-10-13 10:27:34.000000000 -0700
+++ llvm-3.0.src-new/Makefile.config.in	2011-12-03 10:37:26.000000000 -0800
@@ -113,6 +113,10 @@
 # call if we're cross-compiling).
 BUILD_CC=@BUILD_CC@
 BUILD_CXX=@BUILD_CXX@
+BUILD_CPPFLAGS=@BUILD_CPPFLAGS@
+BUILD_CFLAGS=@BUILD_CFLAGS@
+BUILD_CXXFLAGS=@BUILD_CXXFLAGS@
+BUILD_LDFLAGS=@BUILD_LDFLAGS@
 
 # Triple for configuring build tools when cross-compiling
 BUILD_TRIPLE=@build@
diff -Naur llvm-3.0.src-old/Makefile.rules llvm-3.0.src-new/Makefile.rules
--- llvm-3.0.src-old/Makefile.rules	2011-10-11 05:51:44.000000000 -0700
+++ llvm-3.0.src-new/Makefile.rules	2011-12-04 13:55:04.000000000 -0800
@@ -641,18 +641,18 @@
 
 ifeq ($(BUILD_COMPONENT), 1)
   Compile.C     = $(Compile.Wrapper) \
-	          $(BUILD_CC) $(CPP.Flags) $(C.Flags) $(CFLAGS) $(CPPFLAGS) \
+	          $(BUILD_CC) $(CPP.Flags) $(C.Flags) $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) \
                   $(TargetCommonOpts) $(CompileCommonOpts) -c
   Compile.CXX   = $(Compile.Wrapper) \
-	          $(BUILD_CXX) $(CPP.Flags) $(CXX.Flags) $(CXXFLAGS) \
+	          $(BUILD_CXX) $(CPP.Flags) $(CXX.Flags) $(BUILD_CXXFLAGS) \
 		  $(CPPFLAGS) \
                   $(TargetCommonOpts) $(CompileCommonOpts) -c
   Preprocess.CXX= $(Compile.Wrapper) \
-	          $(BUILD_CXX) $(CPP.Flags) $(CPPFLAGS) $(TargetCommonOpts) \
+	          $(BUILD_CXX) $(CPP.Flags) $(BUILD_CPPFLAGS) $(TargetCommonOpts) \
                   $(CompileCommonOpts) $(CXX.Flags) -E
   Link          = $(Compile.Wrapper) \
-	          $(BUILD_CXX) $(CPP.Flags) $(CXX.Flags) $(CXXFLAGS) \
-		  $(LD.Flags) $(LDFLAGS) \
+	          $(BUILD_CXX) $(CPP.Flags) $(CXX.Flags) $(BUILD_CXXFLAGS) \
+		  $(LD.Flags) $(BUILD_LDFLAGS) \
                   $(TargetCommonOpts) $(CompileCommonOpts) $(Strip)
 else
   Compile.C     = $(Compile.Wrapper) \
