diff -ruN sc-1.0pre-20120721/cam.c sc-1.0pre-2.1.3/cam.c
--- sc-1.0pre-20120721/cam.c	2014-01-07 20:22:12.461065244 +0100
+++ sc-1.0pre-2.1.3/cam.c	2014-01-07 20:35:13.075139689 +0100
@@ -1841,7 +1841,11 @@
   cScCamSlot(cCam *Cam, const char *DevId, int Slot);
   void Process(const unsigned char *data, int len);
   eModuleStatus Status(void);
+#if APIVERSNUM >= 20103
+  bool ResetSlot(bool log=true);
+#else
   bool Reset(bool log=true);
+#endif
   cCiFrame *Frame(void) { return &frame; }
   };
 
@@ -1853,7 +1857,11 @@
   cam=Cam; devId=DevId; slot=Slot;
   version=0; caids[0]=0; doReply=false; lastStatus=msReset;
   frame.SetRb(&rb);
+#if APIVERSNUM >= 20103
+  ResetSlot(false);
+#else
   Reset(false);
+#endif
 }
 
 eModuleStatus cScCamSlot::Status(void)
@@ -1876,7 +1884,11 @@
   return status;
 }
 
+#if APIVERSNUM >= 20103
+bool cScCamSlot::ResetSlot(bool log)
+#else
 bool cScCamSlot::Reset(bool log)
+#endif
 {
   reset=true; resetTimer.Set(SLOT_RESET_TIME);
   rb.Clear();
@@ -1890,7 +1902,11 @@
   bool dr=cam->IsSoftCSA(false) || ScSetup.ConcurrentFF>0;
   if(dr!=doReply && !IsDecrypting()) {
     PRINTF(L_CORE_CI,"%s.%d: doReply changed, reset triggered",devId,slot);
+#if APIVERSNUM >= 20103
+    ResetSlot(false);
+#else
     Reset(false);
+#endif
     doReply=dr;
     }
   if(checkTimer.TimedOut()) {
diff -ruN sc-1.0pre-20120721/device.c sc-1.0pre-2.1.3/device.c
--- sc-1.0pre-20120721/device.c	2014-01-07 20:22:12.430065241 +0100
+++ sc-1.0pre-2.1.3/device.c	2014-01-07 20:55:37.760256484 +0100
@@ -357,7 +357,11 @@
   *vdr_nci=0; *vdr_ud=vdr_save_ud;
 
   int i, found=0;
+#if APIVERSNUM >= 20103
+  for(i=0; i<MAXDEVICES; i++) {
+#else
   for(i=0; i<MAXDVBDEVICES; i++) {
+#endif
     if(UseDevice(NextCardIndex())) {
       char name[128];
       cScDevices::DvbName(DEV_DVB_FRONTEND,i,0,name,sizeof(name));
@@ -382,7 +386,11 @@
       }
     else NextCardIndex(1);
     }
+#if APIVERSNUM >= 20103
+  NextCardIndex(MAXDEVICES-i);
+#else
   NextCardIndex(MAXDVBDEVICES-i);
+#endif
   if(found>0) PRINTF(L_GEN_INFO,"captured %d video device%s",found,found>1 ? "s" : "");
   else PRINTF(L_GEN_INFO,"no DVB device captured");
   return found>0;
@@ -411,7 +419,11 @@
 
 void cScDevices::SetForceBudget(int n)
 {
+#if APIVERSNUM >= 20103
+   if(n>=0 && n<MAXDEVICES) budget|=(1<<n);
+#else
    if(n>=0 && n<MAXDVBDEVICES) budget|=(1<<n);
+#endif
 }
 
 bool cScDevices::ForceBudget(int n)
Binary files sc-1.0pre-20120721/.hg/dirstate and sc-1.0pre-2.1.3/.hg/dirstate differ
diff -ruN sc-1.0pre-20120721/Makefile sc-1.0pre-2.1.3/Makefile
--- sc-1.0pre-20120721/Makefile	2014-01-07 20:22:12.452065243 +0100
+++ sc-1.0pre-2.1.3/Makefile	2014-01-07 20:42:27.138181085 +0100
@@ -50,7 +50,7 @@
 ### The C++ compiler and options:
 
 CXX      ?= g++
-CXXFLAGS ?= -O2 -g -Wall -Woverloaded-virtual
+CXXFLAGS ?= -g -O3 -Wall -Werror=overloaded-virtual -Wno-parentheses
 
 ### Includes and Defines
 
@@ -144,9 +144,10 @@
 endif
 
 # FFdeCSA
-CPUOPT     ?= pentium
-PARALLEL   ?= PARALLEL_32_INT
-CSAFLAGS   ?= -Wall -fPIC -g -O3 -mmmx -fomit-frame-pointer -fexpensive-optimizations -funroll-loops
+CPUOPT     ?= native 
+PARALLEL   ?= PARALLEL_128_SSE2 
+CSAFLAGS   ?= -Wall -fPIC -g -O3 -mmmx -fomit-frame-pointer -fexpensive-optimizations -funroll-loops  -msse -msse2
+# CSAFLAGS   ?= -fexpensive-optimizations -funroll-loops -mmmx -msse -msse2 -msse3
 FFDECSADIR  = FFdecsa
 FFDECSA     = $(FFDECSADIR)/FFdecsa.o
 FFDECSATEST = $(FFDECSADIR)/FFdecsa_test.done
