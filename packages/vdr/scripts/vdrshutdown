#!/bin/sh

. /etc/wakeup

do_shutdown()
{
  sleep 0
  if [ -c /dev/ttyACM0 ]; then
     systemctl stop libcec-daemon.service
  fi
  if [ -s "/var/log/syslog" ]; then
     sdim=`ls -al /var/log/syslog | awk '{print $5}'`
     if [ "$sdim" -gt "10240000" ]; then
        if [ -f "/var/log/syslog.gz" ]; then
           cp /var/log/syslog.gz /var/log/syslog.gz.1
           rm /var/log/syslog.gz
        fi
        gzip /var/log/syslog
     fi
  fi
  if [ -s "/var/log/kern.log" ]; then
     kdim=`ls -al /var/log/kern.log | awk '{print $5}'`
     if [ "$kdim" -gt "10240000" ]; then
        if [ -f "/var/log/kern.log.gz" ]; then
           cp /var/log/kern.log.gz /var/log/kern.log.gz.1
           rm /var/log/kern.log.gz
        fi
        gzip /var/log/kern.log
     fi
  fi
  if [ -s "/var/log/messages" ]; then
     mdim=`ls -al /var/log/messages | awk '{print $5}'`
     if [ "$kdim" -gt "10240000" ]; then
        if [ -f "/var/log/messages.gz" ]; then
           cp /var/log/messages.gz /var/log/messages.gz.1
           rm /var/log/messages.gz
        fi
        gzip /var/log/messages
     fi
  fi

  sleep .5
  if [ -c /dev/ttyACM0 ]; then
     echo 'standby 0' | cec-client -s /dev/ttyACM0
  fi
  sync
  poweroff -d -f -h
}

do_reboot()
{
  sleep 0
  sync
  reboot
}

osdmsg()
{
  sleep 2
  echo "MESG $1" | nc localhost 6419
}

grep -q '^LOCAL$' /etc/adjtime && HWCLOCK_LOCAL_TIME="-l"

TIMER=$1
[ -z "$TIMER" ] && TIMER=`/usr/bin/getwakeup $HWCLOCK_LOCAL_TIME`
[ -z "$TIMER" ] && TIMER=0

[ -z "$WAKEUP" -o "$WAKEUP" = no -o -z "$TIMER" ] && exit 0

if [ $REGULAR_DAYS -gt 0 ]; then
  REGULAR_TIMER=$((`date -d "$REGULAR_TIME" +%s` + $REGULAR_DAYS * 24 * 60 * 60))

  # when no vdr timer is set or vdr timer starts later than regular timer:
  if [ $TIMER -eq 0 ] || [ $TIMER -gt 0 -a $REGULAR_TIMER -lt $TIMER ]; then
    TIMER=$REGULAR_TIMER
  fi
fi

if [ "$WAKEUP" = nvram -a -x /usr/bin/nvram-wakeup ]; then
  if [ -r /etc/nvram-wakeup.conf ]; then
    /usr/bin/nvram-wakeup -C /etc/nvram-wakeup.conf -ls $TIMER 
  elif [ -n "$BOARD_TYPE" ]; then
    /usr/bin/nvram-wakeup -I $BOARD_TYPE -ls $TIMER
  else
    /usr/bin/nvram-wakeup -ls $TIMER
  fi
  case $? in
    0) # everything is ok
       do_shutdown
       ;;
#FIXME: for boards that need nvram-wakeup and reboot, this won't work anyway with sifbox at the moment
#maybe this should be removed after all
    1) # we need to reboot
       do_reboot
       ;;
    *) # something went wrong
       osdmsg "nvram-wakeup: cannot set time, shutdown aborted!"
       ;;
  esac
elif [ "$WAKEUP" = acpi -a -e /sys/class/rtc/rtc0/wakealarm ]; then
  echo 0 >/sys/class/rtc/rtc0/wakealarm
  echo  $((${TIMER}-300)) >/sys/class/rtc/rtc0/wakealarm
  #some boards need to have this run twice
  echo  $((${TIMER}-300)) >/sys/class/rtc/rtc0/wakealarm
  do_shutdown
else
  do_shutdown
fi

