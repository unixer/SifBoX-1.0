diff -ruN vdr/config.c vdr-1/config.c
--- vdr/config.c	2014-01-08 21:42:15.000000000 +0100
+++ vdr-1/config.c	2014-01-08 21:43:57.000000000 +0100
@@ -402,6 +402,9 @@
   StandardCompliance = STANDARD_DVB;
   MarginStart = 2;
   MarginStop = 10;
+  JumpSeconds = 60;
+  JumpSecondsSlow = 10;
+  JumpSecondsRepeat = 300;
   AudioLanguages[0] = -1;
   DisplaySubtitles = 0;
   SupportTeletext = 0;
@@ -618,6 +621,9 @@
   else if (!strcasecmp(Name, "StandardCompliance"))  StandardCompliance = atoi(Value);
   else if (!strcasecmp(Name, "MarginStart"))         MarginStart        = atoi(Value);
   else if (!strcasecmp(Name, "MarginStop"))          MarginStop         = atoi(Value);
+  else if (!strcasecmp(Name, "JumpSeconds"))         JumpSeconds        = atoi(Value); 
+  else if (!strcasecmp(Name, "JumpSecondsSlow"))     JumpSecondsSlow    = atoi(Value);
+  else if (!strcasecmp(Name, "JumpSecondsRepeat"))   JumpSecondsRepeat  = atoi(Value);
   else if (!strcasecmp(Name, "AudioLanguages"))      return ParseLanguages(Value, AudioLanguages);
   else if (!strcasecmp(Name, "DisplaySubtitles"))    DisplaySubtitles   = atoi(Value);
   else if (!strcasecmp(Name, "SupportTeletext"))     SupportTeletext    = atoi(Value);
@@ -738,6 +744,9 @@
   Store("StandardCompliance", StandardCompliance);
   Store("MarginStart",        MarginStart);
   Store("MarginStop",         MarginStop);
+  Store("JumpSeconds",        JumpSeconds);
+  Store("JumpSecondsSlow",    JumpSecondsSlow);
+  Store("JumpSecondsRepeat",  JumpSecondsRepeat);
   StoreLanguages("AudioLanguages", AudioLanguages);
   Store("DisplaySubtitles",   DisplaySubtitles);
   Store("SupportTeletext",    SupportTeletext);
diff -ruN vdr/config.h vdr-1/config.h
--- vdr/config.h	2014-01-08 21:42:15.000000000 +0100
+++ vdr-1/config.h	2014-01-08 21:43:57.000000000 +0100
@@ -286,6 +286,7 @@
   int TimeTransponder;
   int StandardCompliance;
   int MarginStart, MarginStop;
+  int JumpSeconds, JumpSecondsSlow, JumpSecondsRepeat;
   int AudioLanguages[I18N_MAX_LANGUAGES + 1];
   int DisplaySubtitles;
   int SupportTeletext;
diff -ruN vdr/menu.c vdr-1/menu.c
--- vdr/menu.c	2014-01-08 21:42:15.000000000 +0100
+++ vdr-1/menu.c	2014-01-08 21:43:57.000000000 +0100
@@ -3628,6 +3628,9 @@
   Add(new cMenuEditIntItem(tr("Setup.Replay$Resume ID"), &data.ResumeID, 0, 99));
   Add(new cMenuEditBoolItem(tr("Setup.Replay$Jump&Play"), &data.JumpPlay));
   Add(new cMenuEditBoolItem(tr("Setup.Replay$Play&Jump"), &data.PlayJump));
+  Add(new cMenuEditIntItem( tr("Setup.Recording$Jump Seconds"), &data.JumpSeconds));
+  Add(new cMenuEditIntItem( tr("Setup.Recording$Jump Seconds Slow"), &data.JumpSecondsSlow));
+  Add(new cMenuEditIntItem( tr("Setup.Recording$Jump Seconds (Repeat)"), &data.JumpSecondsRepeat));
   Add(new cMenuEditBoolItem(tr("Setup.Replay$Pause at last mark"), &data.PauseLastMark));
 }
 
@ -5681,9 +5684,11 @@
     case kRight:   Forward(); break;
     case kRed:     TimeSearch(); break;
     case kGreen|k_Repeat:
-    case kGreen:   SkipSeconds(-60); break;
+                   SkipSeconds(-(Setup.JumpSecondsRepeat)); break;
+    case kGreen:   SkipSeconds(-(Setup.JumpSeconds)); break;
     case kYellow|k_Repeat:
-    case kYellow:  SkipSeconds( 60); break;
+                   SkipSeconds(Setup.JumpSecondsRepeat); break;
+    case kYellow:  SkipSeconds(Setup.JumpSeconds); break;
+    case k1|k_Repeat:
+    case k1:       SkipSeconds(-Setup.JumpSecondsSlow); break;
+    case k3|k_Repeat:
+    case k3:       SkipSeconds(Setup.JumpSecondsSlow); break;
     case kStop:
     case kBlue:    Hide();
                    Stop();
diff -ruN vdr/po/de_DE.po vdr-1/po/de_DE.po
--- vdr/po/de_DE.po	2014-01-08 21:42:15.000000000 +0100
+++ vdr-1/po/de_DE.po	2014-01-08 21:43:57.000000000 +0100
@@ -934,6 +934,15 @@
 msgid "Button$Scan"
 msgstr "Scan"
 
+msgid "Setup.Recording$Jump Seconds"
+msgstr "Sprungweite in Sekunden"
+
+msgid "Setup.Recording$Jump Seconds Slow"
+msgstr "Sprungweite in Sekunden langsam"
+
+msgid "Setup.Recording$Jump Seconds (Repeated)"
+msgstr "Sprungweite in Sek. (wiederh.)"
+
 msgid "Setup.EPG$EPG scan timeout (h)"
 msgstr "Zeit bis zur EPG-Aktualisierung (h)"
 
